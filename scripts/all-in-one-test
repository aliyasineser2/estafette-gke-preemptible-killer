#!/bin/bash

set -euo pipefail

# Get script path.
script_path=$(dirname "$(readlink -f "${0}")")

# Create cluster using YAML provided in quick start guide of kind.
kind create cluster --config "${script_path}/kind-example-config.yaml" || true
export KUBECONFIG=$(kind get kubeconfig-path --name='kind')

# For all the nodes, export it's configuration to YAML, add gke-preemptible
# annotation, delete any previous killer state, then replace the configuration.
for n in '' {2..3}; do
  kubectl get node "kind-worker${n}" -o yaml > "${script_path}/a.yaml"
  sed -i '/^  labels:/a \ \ \ \ cloud.google.com/gke-preemptible: "true"' "${script_path}/a.yaml"
  sed -i '/gke-preemptible-killer-state/d' "${script_path}/a.yaml"
  kubectl replace -f "${script_path}/a.yaml"
done

# Cleanup
rm -f "${script_path}/a.yaml"

# Run estafette-gke-preemptible-killer with all the arguments provided to this
# script.
timeout 5s "${script_path}/../estafette-gke-preemptible-killer" "${@}" || true

# For all the nodes report their CreationTimestamp and their
# gke-preemptible-killer-state.
for n in '' {2..3}; do
  kubectl describe node kind-worker${n} | grep -E 'CreationTimestamp|estafette.io/gke-preemptible-killer-state'
done
